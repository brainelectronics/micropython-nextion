---

# This workflow will install Python dependencies, run tests and lint with a
# specific Python version
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test Python package

on:
  push:
    # branches: [ $default-branch ]
    branches-ignore:
      - 'main'
      - 'develop'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      - name: Install test dependencies
        run: |
          pip install -r requirements-test.txt
      - name: Lint with flake8
        run: |
          flake8 .
      - name: Lint with yamllint
        run: |
          yamllint .
      # - name: Test with pytest
      #   run: |
      #     python -m pip install pytest
      #     pytest
      # - name: Test with nose2
      #   run: |
      #     python -m pip install nose2
      #     nose2 --config tests/unittest.cfg
      #     coverage xml
      #     coverage html
      # - name: Upload pytest test results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: pytest-results-${{ matrix.python-version }}
      #     path: junit/test-results-${{ matrix.python-version }}.xml
      #   # Use always() to always run this step to publish test results when there are test failures
      #   if: ${{ always() }}
      - name: Install deploy dependencies
        run: |
          if [ -f requirements-deploy.txt ]; then pip install -r requirements-deploy.txt; fi
      - name: Build package
        run: |
          changelog2version \
            --changelog_file changelog.md \
            --version_file nextion/version.py \
            --version_file_type py \
            --debug
          python setup.py sdist
          rm dist/*.orig
      - name: Test build package
        run: |
          twine check dist/*
      - name: Validate mip package file
        run: |
          upy-package \
            --setup_file setup.py \
            --package_changelog_file changelog.md \
            --package_file package.json \
            --validate \
            --ignore-version
